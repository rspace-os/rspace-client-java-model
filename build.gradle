apply plugin: 'java'
// enables 'install' task into repository
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'signing'
group = 'com.researchspace'
sourceCompatibility = 1.8
version = '1.6.0'
// 
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

def jacksonVersion='2.8.11'
def log4jVersion='1.7.21'

repositories {
	mavenCentral()
}

dependencies {
	 annotationProcessor 'org.projectlombok:lombok:1.18.4'  
	compile 'org.projectlombok:lombok:1.18.4'
	compile 'commons-lang:commons-lang:2.6'
	compile 'org.slf4j:slf4j-api:'+log4jVersion
	
	compile 'javax.validation:validation-api:1.1.0.Final'
	compile 'com.fasterxml.jackson.core:jackson-annotations:'+jacksonVersion
	compile 'com.fasterxml.jackson.core:jackson-core:'+jacksonVersion
	compile 'com.fasterxml.jackson.core:jackson-databind:'+jacksonVersion
 
	testCompile   'junit:junit:4.12'
	testCompile   'org.slf4j:slf4j-simple:'+log4jVersion

}

test{
 testLogging.showStandardStreams = true
 //delegate command line properties through to Test JVM
 systemProperties = System.getProperties()
}



tasks.withType(Test) {
	reports.html.destination = file("${reporting.baseDir}/${name}")
}


// Below here are tasks required for signing and uploading to Maven Central
task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}


task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}


//Only sign if it's a release version, uncomment to activate this
//signing {
//    sign configurations.archives
//}


artifacts {
	archives javadocJar, sourcesJar
}


uploadArchives {
  repositories {
	mavenDeployer {
	  beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

	  repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
		authentication(userName: project.hasProperty('ossrhUsername')?project.property('ossrhUsername'):"", 
			           password: project.hasProperty('ossrhPassword')?project.property('ossrhPassword'):"")
	  }

	  snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
		
		authentication(userName: project.hasProperty('ossrhUsername')?project.property('ossrhUsername'):"", 
			           password: project.hasProperty('ossrhPassword')?project.property('ossrhPassword'):"")
	  }

	  pom.project {
		name 'rspace-client-java-model'
		packaging 'jar'
		// optionally artifactId can be defined here
		description 'Java classes for RSpace API entities'
		url 'https://github.com/rspace-os/rspace-client-java-model'

		scm {
		  connection 'https://github.com/rspace-os/rspace-client-java-model'
		  developerConnection 'https://github.com/rspace-os/rspace-client-java-model.git'
		  url 'https://github.com/rspace-os/rspace-client-java-model'
		}

		licenses {
		  license {
			name 'The Apache License, Version 2.0'
			url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
		  }
		}

		developers {
		  developer {
			id 'richard23'
			name 'Richard Adams'
			email 'richard@researchspace.com'
		  }
		}
	  }
	}
  }
}